name: Deploy to Vercel (CI â†’ CD)

on:
  # Manual run (useful for first deploy or hotfixes)
  workflow_dispatch:
    inputs:
      ref:
        description: 'Branch or ref to deploy (default: main)'
        required: false
        default: 'main'

  # Trigger only when CI workflow completes successfully
  workflow_run:
    workflows: ["CI"]        # <-- must exactly match "name:" in ci.yml
    types:
      - completed
      

jobs:
  deploy:
    name: Deploy to Vercel
    runs-on: ubuntu-latest
    concurrency:
      group: vercel-deploy
      cancel-in-progress: true
    if: |
      github.event_name == 'workflow_dispatch' ||
      (github.event_name == 'workflow_run' &&
       github.event.workflow_run.conclusion == 'success' &&
       github.event.workflow_run.head_branch == 'main')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.ref || github.event.workflow_run.head_branch }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json
          npm install -g npm@latest
          # Install platform-specific Rollup binaries
          npm install @rollup/rollup-linux-x64-gnu @rollup/rollup-linux-x64-musl @rollup/rollup-darwin-x64 @rollup/rollup-win32-x64-msvc --save-optional
          npm install
          npm rebuild rollup

      - name: Build (Vite)
        env:
          CI: false
          # Add platform-specific env vars
          ROLLUP_NATIVE_EXTENSIONS: 'true'
          NODE_OPTIONS: '--max-old-space-size=4096'
        run: npm run build

      - name: Ensure build output exists
        run: |
          if [ ! -d dist ]; then 
            echo "Build failed: dist/ not found"
            echo "Build output:"
            ls -la
            exit 1
          fi
          echo "Build output contents:"
          ls -la dist/

      - name: Validate Vercel Configuration
        run: |
          if [ -z "${{ secrets.VERCEL_TOKEN }}" ]; then
            echo "Error: VERCEL_TOKEN is not set in repository secrets"
            exit 1
          fi
          if [ -z "${{ secrets.VERCEL_TEAM_ID }}" ]; then
            echo "Error: VERCEL_TEAM_ID is not set in repository secrets"
            exit 1
          fi
          if [ -z "${{ secrets.VERCEL_PROJECT_ID }}" ]; then
            echo "Error: VERCEL_PROJECT_ID is not set in repository secrets"
            exit 1
          fi

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          zeit-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_TEAM_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./
          prod: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.ref == 'main') || (github.event_name == 'workflow_run' && github.event.workflow_run.head_branch == 'main') }}